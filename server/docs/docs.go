// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Jim Ancona",
            "url": "https://github.com/jancona",
            "email": "jim@anconafamily.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "returns all categories",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "adds a new Category",
                "operationId": "addCategory",
                "parameters": [
                    {
                        "description": "Add Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CategoryIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "gets a Category",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "updates a Category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "tags": [
                    "categories"
                ],
                "summary": "deletes a Category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "returns all collections",
                "operationId": "getCollections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Collection"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "adds a new Collection",
                "operationId": "addCollection",
                "parameters": [
                    {
                        "description": "Add Collection",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CollectionIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/collections/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "gets a Collection",
                "operationId": "getCollection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "updates a Collection",
                "operationId": "updateCollection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Collection",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "tags": [
                    "collections"
                ],
                "summary": "deletes a Collection",
                "operationId": "deleteCollection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Collection"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/content": {
            "post": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "returns a URL for uploading content",
                "operationId": "postContentRequest",
                "parameters": [
                    {
                        "description": "Create content request",
                        "name": "contentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "returns all posts",
                "operationId": "getPosts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Post"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "adds a new Post",
                "operationId": "addPost",
                "parameters": [
                    {
                        "description": "Add Post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "gets a Post",
                "operationId": "getPost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "updates a Post",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "tags": [
                    "posts"
                ],
                "summary": "deletes a Post",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/records": {
            "get": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "returns all records",
                "operationId": "getRecords",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Record"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "returns search results",
                "operationId": "search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SearchResult"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/search/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "returns a single search result",
                "operationId": "searchByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Result ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SearchHit"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        },
        "/settings": {
            "put": {
                "security": [
                    {
                        "OAuth2Implicit": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    },
                    {
                        "OAuth2AuthCode": [
                            "cms",
                            "openid",
                            "profile",
                            "email"
                        ]
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "updates settings",
                "operationId": "updateSettings",
                "parameters": [
                    {
                        "description": "Update Settings",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Settings"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Errors"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ContentRequest": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                }
            }
        },
        "model.Category": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 999
                },
                "insert_time": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CategoryIn": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Collection": {
            "type": "object",
            "required": [
                "categories",
                "id",
                "name"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "citation_template": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CollectionField"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 999
                },
                "insert_time": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CollectionMapping"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CollectionField": {
            "type": "object",
            "properties": {
                "header": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                },
                "regexError": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                }
            }
        },
        "model.CollectionIn": {
            "type": "object",
            "required": [
                "categories",
                "name"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "citation_template": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CollectionField"
                    }
                },
                "location": {
                    "type": "string"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CollectionMapping"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CollectionMapping": {
            "type": "object",
            "properties": {
                "dbField": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "ixField": {
                    "type": "string"
                },
                "ixRole": {
                    "type": "string"
                }
            }
        },
        "model.Errors": {
            "type": "object"
        },
        "model.Post": {
            "type": "object",
            "required": [
                "collection",
                "id",
                "name"
            ],
            "properties": {
                "collection": {
                    "type": "integer",
                    "example": 999
                },
                "id": {
                    "type": "integer",
                    "example": 999
                },
                "insert_time": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "recordsKey": {
                    "type": "string"
                },
                "recordsStatus": {
                    "type": "string"
                }
            }
        },
        "model.PostIn": {
            "type": "object",
            "required": [
                "collection",
                "name"
            ],
            "properties": {
                "collection": {
                    "type": "integer",
                    "example": 999
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "recordsKey": {
                    "type": "string"
                },
                "recordsStatus": {
                    "type": "string"
                }
            }
        },
        "model.Record": {
            "type": "object",
            "required": [
                "data",
                "id",
                "post"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 999
                },
                "insert_time": {
                    "type": "string"
                },
                "ix_hash": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "post": {
                    "type": "integer",
                    "example": 999
                }
            }
        },
        "model.SearchEvent": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "place": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.SearchHit": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "integer"
                },
                "collectionName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "person": {
                    "type": "object",
                    "$ref": "#/definitions/model.SearchPerson"
                },
                "record": {
                    "description": "only returned on search by id",
                    "type": "object",
                    "$ref": "#/definitions/model.SearchRecord"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "model.SearchLabelValue": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.SearchPerson": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SearchEvent"
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SearchRelationship"
                    }
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "model.SearchRecord": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/model.SearchLabelValue"
            }
        },
        "model.SearchRelationship": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.SearchResult": {
            "type": "object",
            "properties": {
                "hits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SearchHit"
                    }
                },
                "maxScore": {
                    "type": "number"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.Settings": {
            "type": "object",
            "properties": {
                "insert_time": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "postMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SettingsPostMetadata"
                    }
                }
            }
        },
        "model.SettingsPostMetadata": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tooltip": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://ourroots.auth0.com/authorize?audience=https%3A%2F%2Fapi.ourroots.org%2Fpreprod",
            "scopes": {
                "cms": " Grants read and write access to the CMS",
                "email": " Grants access to OIDC email attributes",
                "openid": " Indicates that the application intends to use OIDC to verify the user's identity",
                "profile": " Grants access to OIDC user profile attributes"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1.0",
	Host:        "api.ourroots.org",
	BasePath:    "/",
	Schemes:     []string{"http", "https"},
	Title:       "OurRoots API",
	Description: "This is the OurRoots API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
