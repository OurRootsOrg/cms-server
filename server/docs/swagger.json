{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the OurRoots API",
        "title": "OurRoots API",
        "contact": {
            "name": "Jim Ancona",
            "url": "https://github.com/jancona",
            "email": "jim@anconafamily.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1.0"
    },
    "host": "api.ourroots.org",
    "basePath": "/",
    "paths": {
        "/categories": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "returns all categories",
                "operationId": "find",
                "parameters": [
                    {
                        "description": "Dummy",
                        "name": "dummy",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.FieldDefSet"
                        }
                    },
                    {
                        "description": "Dummy",
                        "name": "dummy",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.fieldType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "adds a new Category",
                "operationId": "addOne",
                "parameters": [
                    {
                        "description": "Add Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CategoryInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "categories"
                ],
                "summary": "deletes all Categories",
                "operationId": "deleteAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "gets a Category",
                "operationId": "getOne",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "categories"
                ],
                "summary": "deletes a Category",
                "operationId": "delete",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "updates a Category",
                "operationId": "update",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CategoryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "415": {
                        "description": "Bad Content-Type",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Category": {
            "type": "object",
            "properties": {
                "csvHeading": {
                    "type": "string"
                },
                "fieldDefs": {
                    "type": "object",
                    "$ref": "#/definitions/model.FieldDefSet"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CategoryInput": {
            "type": "object",
            "properties": {
                "csvHeading": {
                    "type": "string"
                },
                "fieldDefs": {
                    "type": "object",
                    "$ref": "#/definitions/model.FieldDefSet"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.FieldDefSet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/model.fieldType"
            }
        },
        "model.fieldType": {
            "type": "string"
        }
    }
}