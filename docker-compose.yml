version: "3.0"
services:
  postgres:
    image: postgres:10.7
    ports:
      - "5432:5432"
    volumes:
      - cms_pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ourroots
    networks:
      - mynetwork

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - cms_s3data:/data
    environment:
      MINIO_ACCESS_KEY: minioaccess
      MINIO_SECRET_KEY: miniosecret
    command: server /data
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/advanced.config:/etc/rabbitmq/advanced.config
      - ./rabbitmq/definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    volumes:
      - cms_esdata:/usr/share/elasticsearch/data
    command: ["sh", "-c", "./bin/elasticsearch-plugin install analysis-phonetic && /usr/local/bin/docker-entrypoint.sh"]
    networks:
      - mynetwork

  publisher:
    build:
      context: .
      dockerfile: Dockerfile.publisher
    image: publisher
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
    environment:
      - BASE_URL=http://localhost:8000
      - DATABASE_URL=postgres://ourroots:password@postgres:5432/cms?sslmode=disable
      - AWS_REGION=us-east-1
      - PUB_SUB_RECORDSWRITER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - PUB_SUB_PUBLISHER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - mynetwork

  recordswriter:
    build:
      context: .
      dockerfile: Dockerfile.recordswriter
    image: recordswriter
    depends_on:
      - postgres
      - minio
      - rabbitmq
    environment:
      - BASE_URL=http://localhost:8000
      - DATABASE_URL=postgres://ourroots:password@postgres:5432/cms?sslmode=disable
      - AWS_REGION=us-east-1
      - BLOB_STORE_BUCKET=cmsbucket
      # this configures minio; to use S3, omit these settings and set the bucket to a bucket you own
      - BLOB_STORE_ENDPOINT=minio:9000
      - BLOB_STORE_ACCESS_KEY=minioaccess
      - BLOB_STORE_SECRET_KEY=miniosecret
      - BLOB_STORE_DISABLE_SSL=true
      - PUB_SUB_RECORDSWRITER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - PUB_SUB_PUBLISHER_URL=amqp://guest:guest@rabbitmq_test:5672/
    networks:
      - mynetwork

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    image: server
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - elasticsearch
    environment:
      - BASE_URL=http://localhost:8000
      - DATABASE_URL=postgres://ourroots:password@postgres:5432/cms?sslmode=disable
      - MIGRATION_DATABASE_URL=postgres://ourroots_schema:password@postgres:5432/cms?sslmode=disable
      - AWS_REGION=us-east-1
      - BLOB_STORE_BUCKET=cmsbucket
      # this configures minio; to use S3, omit these settings and set the bucket to a bucket you own
      - BLOB_STORE_ENDPOINT=127.0.0.1:9000
      - BLOB_STORE_ACCESS_KEY=minioaccess
      - BLOB_STORE_SECRET_KEY=miniosecret
      - BLOB_STORE_DISABLE_SSL=true
      - PUB_SUB_RECORDSWRITER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - PUB_SUB_PUBLISHER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - OIDC_DOMAIN=ourroots.auth0.com
      - OIDC_AUDIENCE=https://api.ourroots.org/preprod
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - mynetwork

volumes:
  cms_pgdata:
    external: true
  cms_s3data:
    external: true
  cms_esdata:
    external: true

networks:
  mynetwork:
    driver: bridge
