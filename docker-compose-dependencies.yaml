version: "3.0"
services:
  postgres_test:
    image: postgres:10.7
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork_test

  minio_test:
    image: minio/minio
    ports:
      - "19000:9000"
    environment:
      MINIO_ACCESS_KEY: minioaccess
      MINIO_SECRET_KEY: miniosecret
    entrypoint: sh
    command: -c 'mkdir -p /data/testbucket && /usr/bin/minio server /data'
    networks:
      - mynetwork_test

  rabbitmq_test:
    image: rabbitmq:3-management-alpine
    ports:
      - "35672:5672"
      - "45672:15672"
    volumes:
      - ./rabbitmq/advanced.config:/etc/rabbitmq/advanced.config
      - ./rabbitmq/definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mynetwork_test

  elasticsearch_test:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    ports:
      - "19200:9200"
    environment:
      - discovery.type=single-node
    command: ["sh", "-c", "./bin/elasticsearch-plugin install analysis-phonetic && /usr/local/bin/docker-entrypoint.sh"]
    networks:
      - mynetwork_test

  publisher_test:
    build:
      context: .
      dockerfile: Dockerfile.publisher
    image: publisher
    depends_on:
      - postgres_test
      - rabbitmq_test
      - elasticsearch_test
    environment:
      - BASE_URL=http://localhost:8000
      - DATABASE_URL=postgres://ourroots:password@postgres_test:5432/cms?sslmode=disable
      - AWS_REGION=us-east-1
      # this configures rabbitmq; to use SQS, set the protocol to awssqs and the host to sqs.us-east-1.amazonaws.com/<accountid>
      - PUB_SUB_RECORDSWRITER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - PUB_SUB_PUBLISHER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - ELASTICSEARCH_URL=http://elasticsearch_test:9200
    networks:
      - mynetwork_test

  recordswriter_test:
    build:
      context: .
      dockerfile: Dockerfile.recordswriter
    image: recordswriter
    depends_on:
      - postgres_test
      - minio_test
      - rabbitmq_test
    environment:
      - BASE_URL=http://localhost:8000
      - DATABASE_URL=postgres://ourroots:password@postgres_test:5432/cms?sslmode=disable
      - AWS_REGION=us-east-1
      - BLOB_STORE_BUCKET=testbucket
      # this configures minio; to use S3, omit these settings and set the bucket to a bucket you own
      - BLOB_STORE_ENDPOINT=minio_test:9000
      - BLOB_STORE_ACCESS_KEY=minioaccess
      - BLOB_STORE_SECRET_KEY=miniosecret
      - BLOB_STORE_DISABLE_SSL=true
      # this configures rabbitmq; to use SQS, set the protocol to awssqs and the host to sqs.us-east-1.amazonaws.com/<accountid>
      - PUB_SUB_RECORDSWRITER_URL=amqp://guest:guest@rabbitmq_test:5672/
      - PUB_SUB_PUBLISHER_URL=amqp://guest:guest@rabbitmq_test:5672/
    networks:
      - mynetwork_test

networks:
  mynetwork_test:
    driver: bridge
